version: '3'

services:
  api:
    container_name: api # Name can be anything
    restart: always
    build: 
      context: ./
      dockerfile: ./api/Dockerfile
    ports:
      - "8000:8000"
    command: gunicorn -w 1 -b :8000 app:app
  
  server:
    container_name: server_nginx
    restart: always
    build: ./nginx
    ports:
      - 8080:80
    depends_on:
      - api

  notebook:
    container_name: jupyter_lab
    restart: always
    build: 
      context: ./
      dockerfile: ./jupyter/Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ./jupyter:/home/jupyterlab

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    ports:
      - "8005:8080"
    networks:
      - monitoring
  
  node-exporter:
    image: prom/node-exporter:v0.17.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  prometheus:
    image: prom/prometheus:v2.9.1
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
    expose:
      - 9090
    ports:
      - "9090:9090"
    networks:
      - monitoring
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter

  alertmanager:
    image: prom/alertmanager:v0.16.2
    container_name: alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:4.6.2
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    expose:
      - 3000
    ports:
      - "3000:3000"  
    networks:
      - monitoring

volumes:
  prometheus-data: {}
  grafana-data: {}

networks:
  monitoring:
    driver: bridge